import * as ts from "typescript";
import { CompilerOptions } from "../CompilerOptions";
import { OutputFile } from "./emit";
import { TranspiledFile, TranspileResult } from "./transpile";
export * from "./emit";
export { Plugin } from "./plugins";
export * from "./transpile";
export interface TranspileFilesResult {
    diagnostics: ts.Diagnostic[];
    emitResult: OutputFile[];
}
export declare function transpileFiles(rootNames: string[], options?: CompilerOptions): TranspileFilesResult;
export declare function transpileProject(configFileName: string, optionsToExtend?: CompilerOptions): TranspileFilesResult;
export declare function transpileVirtualProject(files: Record<string, string>, options?: CompilerOptions): TranspileResult;
export interface TranspileStringResult {
    diagnostics: ts.Diagnostic[];
    file?: TranspiledFile;
}
export declare function transpileString(main: string, options?: CompilerOptions): TranspileStringResult;
