function ____descriptorIndex(self, key)
    local value = rawget(self, key)
    if value ~= nil then
        return value
    end
    local metatable = getmetatable(self)
    while metatable do
        local rawResult = rawget(metatable, key)
        if rawResult ~= nil then
            return rawResult
        end
        local descriptors = rawget(metatable, "_descriptors")
        if descriptors then
            local descriptor = descriptors[key]
            if descriptor then
                if descriptor.get then
                    return descriptor.get(self)
                end
                return
            end
        end
        metatable = getmetatable(metatable)
    end
end
function ____descriptorNewindex(self, key, value)
    local metatable = getmetatable(self)
    while metatable do
        local descriptors = rawget(metatable, "_descriptors")
        if descriptors then
            local descriptor = descriptors[key]
            if descriptor then
                if descriptor.set then
                    descriptor.set(self, value)
                end
                return
            end
        end
        metatable = getmetatable(metatable)
    end
    rawset(self, key, value)
end
function __TS__SetDescriptor(metatable, prop, descriptor)
    if not rawget(metatable, "_descriptors") then
        metatable._descriptors = {}
    end
    metatable._descriptors[prop] = descriptor
    if descriptor.get then
        metatable.__index = ____descriptorIndex
    end
    if descriptor.set then
        metatable.__newindex = ____descriptorNewindex
    end
end
function __TS__ObjectDefineProperty(object, prop, descriptor)
    local metatable = getmetatable(object)
    if not metatable then
        metatable = {}
        setmetatable(object, metatable)
    end
    __TS__SetDescriptor(metatable, prop, descriptor)
    return object
end
