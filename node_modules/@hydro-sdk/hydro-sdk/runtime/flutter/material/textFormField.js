"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TextFormField = void 0;
const textAlign_1 = require("./../../dart/ui/textAlign");
const type_1 = require("../../dart/core/type");
const edgeInsets_1 = require("./../painting/edgeInsets");
const textCapitalization_1 = require("./../services/textCapitalization");
const statelessWidget_1 = require("./../widgets/statelessWidget");
const inputDecoration_1 = require("./inputDecoration");
class TextFormField extends statelessWidget_1.StatelessWidget {
    constructor(props) {
        super();
        this.internalRuntimeType = new type_1.Type(TextFormField);
        this.props = props;
        if (this.props.decoration === undefined) {
            this.props.decoration = new inputDecoration_1.InputDecoration({});
        }
        if (this.props.textCapitalization === undefined) {
            this.props.textCapitalization = textCapitalization_1.TextCapitalization.none;
        }
        if (this.props.textAlign === undefined) {
            this.props.textAlign = textAlign_1.TextAlign.start;
        }
        if (this.props.autofocus === undefined) {
            this.props.autofocus = false;
        }
        if (this.props.readOnly === undefined) {
            this.props.readOnly = false;
        }
        if (this.props.obscureText === undefined) {
            this.props.obscureText = false;
        }
        if (this.props.enableSuggestions === undefined) {
            this.props.enableSuggestions = true;
        }
        if (this.props.autocorrect === undefined) {
            this.props.autocorrect = true;
        }
        if (this.props.autovalidate === undefined) {
            this.props.autovalidate = false;
        }
        if (this.props.maxLengthEnforced === undefined) {
            this.props.maxLengthEnforced = true;
        }
        if (this.props.maxLines === undefined) {
            this.props.maxLines = 1;
        }
        if (this.props.expands === undefined) {
            this.props.expands = false;
        }
        if (this.props.enabled === undefined) {
            this.props.enabled = true;
        }
        if (this.props.cursorWidth === undefined) {
            this.props.cursorWidth = 2.0;
        }
        if (this.props.scrollPadding === undefined) {
            this.props.scrollPadding = edgeInsets_1.EdgeInsets.all(20.0);
        }
        if (this.props.enableInteractiveSelection === undefined) {
            this.props.enableInteractiveSelection = true;
        }
    }
    build() {
        return flutter.material.textFormField(this.props);
    }
}
exports.TextFormField = TextFormField;
