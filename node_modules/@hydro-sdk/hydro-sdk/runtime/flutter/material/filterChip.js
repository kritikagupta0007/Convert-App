"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FilterChip = void 0;
const clip_1 = require("./../../flutter/painting/clip");
const statelessWidget_1 = require("./../widgets/statelessWidget");
const circleBorder_1 = require("../painting/circleBorder");
const rawChip_1 = require("./rawChip");
class FilterChip extends statelessWidget_1.StatelessWidget {
    constructor(props) {
        super();
        this.props = props;
        if (this.props.selected === undefined) {
            this.props.selected = false;
        }
        if (this.props.avatarBorder === undefined) {
            this.props.avatarBorder = new circleBorder_1.CircleBorder({});
        }
        if (this.props.clipBehavior === undefined) {
            this.props.clipBehavior = clip_1.Clip.none;
        }
        if (this.props.autofocus === undefined) {
            this.props.autofocus = false;
        }
    }
    build() {
        return new rawChip_1.RawChip({
            avatar: this.props.avatar,
            label: this.props.label,
            labelStyle: this.props.labelStyle,
            labelPadding: this.props.labelPadding,
            onSelected: this.props.onSelected,
            pressElevation: this.props.pressElevation,
            selected: this.props.selected,
            tooltip: this.props.tooltip,
            clipBehavior: this.props.clipBehavior,
            autofocus: this.props.autofocus,
            backgroundColor: this.props.backgroundColor,
            disabledColor: this.props.disabledColor,
            selectedColor: this.props.selectedColor,
            padding: this.props.padding,
            isEnabled: true,
            materialTapTargetSize: this.props.materialTapTargetSize,
            elevation: this.props.elevation,
            shadowColor: this.props.shadowColor,
            selectedShadowColor: this.props.selectedShadowColor,
            showCheckmark: this.props.showCheckmark,
            checkmarkColor: this.props.checkmarkColor,
            avatarBorder: this.props.avatarBorder,
        });
    }
}
exports.FilterChip = FilterChip;
