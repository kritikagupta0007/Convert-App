"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SliverGrid = void 0;
const list_1 = require("../../dart/collection/list");
const type_1 = require("../../dart/core/type");
const statelessWidget_1 = require("./statelessWidget");
class SliverGrid extends statelessWidget_1.StatelessWidget {
    constructor(props) {
        super();
        this.internalRuntimeType = new type_1.Type(SliverGrid);
        this.props = props;
    }
    static count(props) {
        if (props.mainAxisSpacing === undefined) {
            props.mainAxisSpacing = 0.0;
        }
        if (props.crossAxisSpacing === undefined) {
            props.crossAxisSpacing = 0.0;
        }
        if (props.childAspectRatio === undefined) {
            props.childAspectRatio = 1.0;
        }
        if (props.children === undefined) {
            props.children = list_1.List.fromArray([]);
        }
        return new SliverGrid({
            type: "count",
            key: props.key,
            crossAxisCount: props.crossAxisCount,
            mainAxisSpacing: props.crossAxisSpacing,
            crossAxisSpacing: props.crossAxisSpacing,
            childAspectRatio: props.childAspectRatio,
            children: props.children,
        });
    }
    static extent(props) {
        if (props.mainAxisSpacing === undefined) {
            props.mainAxisSpacing = 0.0;
        }
        if (props.crossAxisSpacing === undefined) {
            props.crossAxisSpacing = 0.0;
        }
        if (props.childAspectRatio === undefined) {
            props.childAspectRatio = 1.0;
        }
        if (props.children === undefined) {
            props.children = list_1.List.fromArray([]);
        }
        return new SliverGrid({
            type: "extent",
            key: props.key,
            maxCrossAxisExtent: props.maxCrossAxisExtent,
            mainAxisSpacing: props.crossAxisSpacing,
            crossAxisSpacing: props.crossAxisSpacing,
            childAspectRatio: props.childAspectRatio,
            children: props.children,
        });
    }
    build() {
        switch (this.props.type) {
            case "count":
                return flutter.widgets.sliverGridCount(this.props);
                break;
            case "extent":
                return flutter.widgets.sliverGridExtent(this.props);
                break;
        }
    }
}
exports.SliverGrid = SliverGrid;
