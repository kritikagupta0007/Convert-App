"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Size = void 0;
const double_1 = require("../core/double");
class Size {
    constructor(width, height) {
        this._dart_getWidth = undefined;
        this._dart_getHeight = undefined;
        this._dart_getAspectRatio = undefined;
        this._dart_getIsEmpty = undefined;
        this._dart_getShortestSide = undefined;
        this._dart_getLongestSide = undefined;
        this._dart_topLeft = undefined;
        this._dart_topCenter = undefined;
        this._dart_topRight = undefined;
        this._dart_centerLeft = undefined;
        this._dart_center = undefined;
        this._dart_centerRight = undefined;
        this._dart_bottomLeft = undefined;
        this._dart_bottomCenter = undefined;
        this._dart_bottomRight = undefined;
        this._dart_contains = undefined;
        this._dart_getFlipped = undefined;
        this._dart_getHashCode = undefined;
        this._dart_toString = undefined;
        this._dart_getIsInfinite = undefined;
        this._dart_getIsFinite = undefined;
        dart.ui.size(this, width, height);
    }
    static copy(source) {
        return dart.ui.sizeCopy(source);
    }
    static square(dimension) {
        return dart.ui.sizeSquare(dimension);
    }
    static fromWidth(width) {
        return dart.ui.sizeFromWidth(width);
    }
    static fromHeight(height) {
        return dart.ui.sizeFromHeight(height);
    }
    static fromRadius(radius) {
        return dart.ui.sizeFromRadius(radius);
    }
    static lerp(a, b, t) {
        return dart.ui.sizeLerp(a, b, t);
    }
    getWidth() {
        return this._dart_getWidth();
    }
    getHeight() {
        return this._dart_getHeight();
    }
    getAspectRatio() {
        return this._dart_getAspectRatio();
    }
    getIsEmpty() {
        return this._dart_getIsEmpty();
    }
    getShortestSide() {
        return this._dart_getShortestSide();
    }
    getLongestSide() {
        return this._dart_getLongestSide();
    }
    topLeft(origin) {
        return this._dart_topLeft(origin);
    }
    topCenter(origin) {
        return this._dart_topCenter(origin);
    }
    topRight(origin) {
        return this._dart_topRight(origin);
    }
    centerLeft(origin) {
        return this._dart_centerLeft(origin);
    }
    center(origin) {
        return this._dart_center(origin);
    }
    centerRight(origin) {
        return this._dart_centerRight(origin);
    }
    bottomLeft(origin) {
        return this._dart_bottomLeft(origin);
    }
    bottomCenter(origin) {
        return this._dart_bottomCenter(origin);
    }
    bottomRight(origin) {
        return this._dart_bottomRight(origin);
    }
    contains(offset) {
        return this._dart_contains(offset);
    }
    getFlipped() {
        return this._dart_getFlipped();
    }
    getHashCode() {
        return this._dart_getHashCode();
    }
    toString() {
        return this._dart_toString();
    }
    getIsInfinite() {
        return this._dart_getIsInfinite();
    }
    getIsFinite() {
        return this._dart_getIsFinite();
    }
}
exports.Size = Size;
Size.zero = new Size(0.0, 0.0);
Size.infinite = new Size(double_1.double.infinity, double_1.double.infinity);
