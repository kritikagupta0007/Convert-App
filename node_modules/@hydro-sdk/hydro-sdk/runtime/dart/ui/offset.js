"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Offset = void 0;
const double_1 = require("../core/double");
class Offset {
    constructor(dx, dy) {
        this._dart_getDx = undefined;
        this._dart_getDy = undefined;
        this._dart_getDistance = undefined;
        this._dart_getDistanceSquared = undefined;
        this._dart_getDirection = undefined;
        this._dart_scale = undefined;
        this._dart_translate = undefined;
        this._dart_getHashCode = undefined;
        this._dart_toString = undefined;
        this._dart_getIsInfinite = undefined;
        this._dart_getIsFinite = undefined;
        dart.ui.offset(this, dx, dy);
    }
    static fromDirection(direction, distance = 1.0) {
        return dart.ui.offsetFromDirection(direction, distance);
    }
    static lerp(a, b, t) {
        return dart.ui.offsetLerp(a, b, t);
    }
    getDx() {
        return this._dart_getDx();
    }
    getDy() {
        return this._dart_getDy();
    }
    getDistance() {
        return this._dart_getDistance();
    }
    getDistanceSquared() {
        return this._dart_getDistanceSquared();
    }
    getDirection() {
        return this._dart_getDirection();
    }
    scale(scaleX, scaleY) {
        return this._dart_scale(scaleX, scaleY);
    }
    translate(translateX, translateY) {
        return this._dart_translate(translateX, translateY);
    }
    getHashCode() {
        return this._dart_getHashCode();
    }
    toString() {
        return this._dart_toString();
    }
    getIsInfinite() {
        return this._dart_getIsInfinite();
    }
    getIsFinite() {
        return this._dart_getIsFinite();
    }
}
exports.Offset = Offset;
Offset.zero = new Offset(0.0, 0.0);
Offset.infinite = new Offset(double_1.double.infinity, double_1.double.infinity);
